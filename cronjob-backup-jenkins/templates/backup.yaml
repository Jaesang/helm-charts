---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup-jenkins-sa
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: backup-jenkins-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: backup-jenkins-sa
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-sh
  namespace: {{ .Release.Namespace }}
data:
  backup.sh: |
    #!/bin/bash

    echo "Started Backup..."
    export POD_NAME=$(kubectl get pods -l "app.kubernetes.io/component=jenkins-master" -o name -n {{ .Release.Namespace }} | awk -F'/' '{print $2}')
    echo "POD_NAME = "$POD_NAME
    export BACKUP_NAME="backup_jenkins_"$(date "+%Y%m%d")".tar.gz"
    echo "BACKUP_NAME = "$BACKUP_NAME
    export EXECUTOR=$HOSTNAME
    echo "EXECUTOR = "$EXECUTOR
    kubectl exec -it -n {{ .Release.Namespace }} ${POD_NAME} -- /bin/bash -c "tar zcvf ${BACKUP_NAME} var/jenkins_home"
    kubectl cp {{ .Release.Namespace }}/${POD_NAME}:${BACKUP_NAME} ./${BACKUP_NAME}
    kubectl cp ./${BACKUP_NAME} {{ .Release.Namespace }}/${EXECUTOR}:/${BACKUP_NAME} -c sshpass
    kubectl exec -it -n {{ .Release.Namespace }} ${EXECUTOR} -c sshpass -- /bin/bash -c "/root/shell/scp.sh"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scp-sh
  namespace: {{ .Release.Namespace }}
data:
  scp.sh: |
    #!/bin/bash

    BACKUP_NAME="backup_jenkins_"$(date "+%Y%m%d")".tar.gz"
    BACKUP_SERVER_PASSWORD_PATH="/root/ssh/password"
    SSH_OPTS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    SSCP="sshpass -f ${BACKUP_SERVER_PASSWORD_PATH} scp ${SSH_OPTS} "
    DEST_USER={{ .Values.destUser }}
    DEST_HOST={{ .Values.destHost }}
    DEST_DIR="{{ .Values.destDir }}"
    echo "Copy backup file to [ ${DEST_DIR} in ${DEST_HOST} ]..."
    ${SSCP} /${BACKUP_NAME} ${DEST_USER}@${DEST_HOST}:${DEST_DIR}
    echo "Completed"
    kill 1
---
apiVersion: v1
kind: Secret
metadata:
  name: ssh-secret
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  password: |-
    {{ .Values.destPassword }}
